Lesson 8: The top command 

Our first administrative command - top

At this moment we know a lot of commands. We are ready to look on some administrative side of the work with system. We will learn how to take a basic look on it. But don't be fooled, basic doesn't mean this command is very simple. It is not. The data collected is very vast and informative.

top

We talk here about top command. Let's execute it and then we will go through the displayed information line by line.

top

who

The main purpose of who is to show who is logged in. We will touch this command in the future labs.

Second line

Tasks: 6 total, 1 running, 5 sleeping, 0 stopped, 0 zombie

Second line shows us information about processes in our system. What every type means?

* total - shows all processes in the system

* running - currently active processes. It means, these processes are using CPU right now

* sleeping - generally - process is waiting for something. It may be I/O operation for example.

* stopped - Stopped processes (for example by ctrl+z)

* zombie - Very important state to understand. It is a process which had finish his job but still has entry in the process table. In simple way, these processes are waiting for exit(). It may happen, when parent process deteriorated somehow. Sometimes we are able to kill zombie (by killing the parrent), but in may cases it will not work. But it is not a place to talk about it :)

Third line

So far so good. Now it is time for the third line.

%Cpu(s): 13.9 us, 9.5 sy, 0.0 ni, 76.3 id, 0.0 wa, 0.4 hi, 0.0 si, 0.0 st

This line shows the CPU(s) utilization, splitted to specific types. Let's go through them one by one.

* us - user - All user processes are combined in this number. So, our sessions too.

* sy - system - processes owned by system (kernel)

* ni - nice - this is important to understand. nice allows us to change the priority of the process.

The standard value for processes is 0 , but we can modify it from 19 (lowest) to -20 (highest) 
priority. This statistic here shows all processes with the niceness set abow 0. So, the processes which will be executed by the system, when "systemm will have time for it".

* id - idle - idle time means that the system is bored and do nothing.

* wa - iowait - the number repspresents the time (which is a subset of idle time) when the process is waiting for input/output operation. This statistic is very important, because it may show the issue outside the CPU, in other hardware (but not only) components.

* hi - hardware interrupts. These are physical interrrupts from hardware and are handled by CPU itself.

* si - software interrupts. These are generated by software and are handled by kernel.

* st - steal time - very important to understand, especially when we are working on virtualized environment. This number represents the time "stealed" from the virtual machine by hypervisor. Another words, how long our system needs to wait for resources from hypervisor.

Fourth and fifth lines

MiB Mem :  16217.5 total,   6184.9 free,   9808.7 used,    224.0 buff/cache
MiB Swap:  49152.0 total,  48436.2 free,    715.8 used.   6278.3 avail Mem


We will go through these two lines together, as both represent the memory information. The only one difference is that the first line is about physical memory and second is about swap. We will talk about swap in future lesson.

total, free and used is obvious.

buff/cache is a combine value of buffer memory, used by kernel and cache, memory by page cache.
available simply means that the new starting program, application, etc can use max this size of memory for its to be run.

Processes list

Below these five lines we have processes list. This list contains fields, so let's go through them to better understand the meaning.
* PID - Process ID number. It is unique number of the process in the system.

* USER - process' owner. The process is started by this user.

* PR - default priority of the process, scheduled by kernel when process was started.

* NI - nice. Shows the value, if nice was performed against the process.

* VIRT - total amount of memory used by the process.

* RES - RAM memory used by process.

* SHR - amount of memory shared with other processes.

* S - process state (we discussed it above).

* %CPU - what amount of available CPU is used by the process.

* %MEM - like for CPU, but this value represents memory usage.

* TIME+ - total time of CPU usage by the process.

* COMMAND - quite obvious, this process is executed.

Many of options we used before can be executed directly from the command line. Here are the examples:
top -o %MEM - run top with processes sorted by memory.

q for exit

top -c will show the full paths.

q for exit, again.

And the last example:

top -u root will show the processes owned by root user.